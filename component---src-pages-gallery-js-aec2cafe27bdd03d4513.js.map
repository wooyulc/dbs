{"version":3,"file":"component---src-pages-gallery-js-aec2cafe27bdd03d4513.js","mappings":"6vCAOe,SAASA,EAAO,GAAyB,IAAtBC,EAAI,EAAJA,KACmB,GADR,EAALC,MAAY,EAALC,MACM,GAAfC,EAAAA,EAAAA,WAAS,GAAM,IAA5CC,EAAU,KAAe,KAMhC,OACE,gBAAC,IAAM,KACL,0BAAI,WACJ,0BAAI,MACJ,gBAAC,IAAQ,CAACC,UAAWD,EAAa,YAAa,IAC1CJ,EAAKM,WAAWC,MAAMC,KAAI,YAAe,IAAZC,EAAI,EAAJA,KACtBC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,gBAAgBC,iBACtBH,EAAMI,MAAQJ,EAAMK,OAE1C,OACE,gBAAC,IAASC,KAAI,CAACC,IAAKR,EAAKS,IACvB,uBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,gBAAC,EAAAC,EAAW,CACVb,MAAOA,EACPc,IAAKf,EAAKgB,KACVC,UAAU,WAKrB,KAGH,0BAAI,MAEJ,gBAAC,IAAQ,CAACrB,UAAWD,EAAa,YAAa,IAC1CJ,EAAK2B,WAAWpB,MAAMC,KAAI,YAAe,IAAZC,EAAI,EAAJA,KACtBC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,gBAAgBC,iBACtBH,EAAMI,MAAQJ,EAAMK,OAE1C,OACE,gBAAC,IAASC,KAAI,CAACC,IAAKR,EAAKS,IACvB,uBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,gBAAC,EAAAC,EAAW,CACVb,MAAOA,EACPc,IAAKf,EAAKgB,KACVC,UAAU,WAKrB,KAGH,0BAAI,OAEJ,gBAAC,IAAQ,CAACrB,UAAWD,EAAa,YAAa,IAC1CJ,EAAK4B,WAAWrB,MAAMC,KAAI,YAAe,IAAZC,EAAI,EAAJA,KACtBC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,gBAAgBC,iBACtBH,EAAMI,MAAQJ,EAAMK,OAE1C,OACE,gBAAC,IAASC,KAAI,CAACC,IAAKR,EAAKS,IACvB,uBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,gBAAC,EAAAC,EAAW,CACVb,MAAOA,EACPc,IAAKf,EAAKgB,KACVC,UAAU,WAKrB,KAIT,C","sources":["webpack://gatsby-starter-default/./src/pages/gallery.js"],"sourcesContent":["import React, { useState} from \"react\";\nimport Layout from '../components/Layout'\nimport {graphql} from \"gatsby\";\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { Carousel } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/gallery.css';\nexport default function Gallery ({data, data2, data3}) {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <Layout>\n      <h1>Gallery</h1>\n      <h2>경기</h2>\n      <Carousel className={isMenuOpen ? \"menu-open\": \"\"}>\n          {data.slideShow1.edges.map(({ node }) => {\n            const image = getImage(node.childImageSharp.gatsbyImageData);\n              const aspectRatio = image.width / image.height;\n\n            return (\n              <Carousel.Item key={node.id}>\n                <div \n                  style={{  \n                    display: 'flex', \n                    justifyContent: 'center', \n                    alignItems: 'center' \n                  }}\n                >\n                  <GatsbyImage \n                    image={image} \n                    alt={node.base} \n                    objectFit='cover'\n                  />\n                </div>\n              </Carousel.Item>\n            );\n         })}\n      </Carousel>\n\n      <h2>회식</h2>\n\n      <Carousel className={isMenuOpen ? \"menu-open\": \"\"}>\n          {data.slideShow2.edges.map(({ node }) => {\n            const image = getImage(node.childImageSharp.gatsbyImageData);\n              const aspectRatio = image.width / image.height;\n\n            return (\n              <Carousel.Item key={node.id}>\n                <div \n                  style={{  \n                    display: 'flex', \n                    justifyContent: 'center', \n                    alignItems: 'center' \n                  }}\n                >\n                  <GatsbyImage \n                    image={image} \n                    alt={node.base} \n                    objectFit='cover'\n                  />\n                </div>\n              </Carousel.Item>\n            );\n         })}\n      </Carousel>\n\n      <h2>이벤트</h2>\n\n      <Carousel className={isMenuOpen ? \"menu-open\": \"\"}>\n          {data.slideShow3.edges.map(({ node }) => {\n            const image = getImage(node.childImageSharp.gatsbyImageData);\n              const aspectRatio = image.width / image.height;\n\n            return (\n              <Carousel.Item key={node.id}>\n                <div \n                  style={{  \n                    display: 'flex', \n                    justifyContent: 'center', \n                    alignItems: 'center' \n                  }}\n                >\n                  <GatsbyImage \n                    image={image} \n                    alt={node.base} \n                    objectFit='cover'\n                  />\n                </div>\n              </Carousel.Item>\n            );\n         })}\n      </Carousel>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    slideShow1: allFile(\n      filter: {relativeDirectory: {eq: \"경기\"}}, \n      sort: {base: ASC}\n    ) {\n      edges {\n        node {\n          id\n          base\n          relativePath\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              height: 600\n              width: 900\n              placeholder: BLURRED\n              quality: 70\n              blurredOptions: {width: 100}\n              transformOptions: {cropFocus: CENTER, fit: COVER}\n            )\n          }\n        }\n      }\n    }\n    slideShow2: allFile(\n      filter: {relativeDirectory: {eq: \"회식\"}}, \n      sort: {base: ASC}\n    ) {\n      edges {\n        node {\n          id\n          base\n          relativePath\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              height: 600\n              width: 900\n              placeholder: BLURRED\n              quality: 70\n              blurredOptions: {width: 100}\n              transformOptions: {cropFocus: CENTER, fit: COVER}\n            )\n          }\n        }\n      }\n    }\n    slideShow3: allFile(\n      filter: {relativeDirectory: {eq: \"이벤트\"}}, \n      sort: {base: ASC}\n    ) {\n      edges {\n        node {\n          id\n          base\n          relativePath\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              height: 600\n              width: 900\n              placeholder: BLURRED\n              quality: 70\n              blurredOptions: {width: 100}\n              transformOptions: {cropFocus: CENTER, fit: COVER}\n            )\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["Gallery","data","data2","data3","useState","isMenuOpen","className","slideShow1","edges","map","node","image","getImage","childImageSharp","gatsbyImageData","width","height","Item","key","id","style","display","justifyContent","alignItems","G","alt","base","objectFit","slideShow2","slideShow3"],"sourceRoot":""}